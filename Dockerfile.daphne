# Utiliza una imagen base de Python para Django
FROM python:3.10.12

# Instala las dependencias del sistema necesarias para lxml
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    fonts-freefont-ttf \
    postgresql \
    postgresql-contrib \
    libopenslide0 \
    nginx && \
    rm -rf /var/lib/apt/lists/*

# Establece el directorio de trabajo en /app
WORKDIR /app

# Copiar el resto de los archivos de la aplicación
COPY ./virtual_microscope /app
COPY requirements.txt /app/

# Crear y activar el entorno virtual, actualizar pip e instalar dependencias

RUN /bin/bash -c "source /app/venv/bin/activate && pip install --upgrade pip && pip install -r /app/requirements.txt"

# Configura las variables de entorno para Django
ENV DJANGO_SETTINGS_MODULE=virtual_microscope.settings

# Copia la configuración de Nginx
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Ejecuta collectstatic solo en producción
ARG MODE=development
RUN if [ "$MODE" = "production" ]; then \
    /bin/bash -c "source venv/bin/activate && python manage.py collectstatic --noinput"; \
    fi

# Comando para iniciar el servidor Django con Daphne
CMD ["/bin/bash", "-c", "source venv/bin/activate && exec daphne -b 0.0.0.0 -p 8089 virtual_microscope.asgi:application"]








